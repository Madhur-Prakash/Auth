# --------------------------------------------------------------- New Version -----------------------------------------------------------------------------------
version: '3.8'
services:

  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    # ports:
    #   - "27018:27017"  # No need for this 
    volumes:
      - ./mongo-data:/data/db   # Persist Mongo data to local folder

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/  # Internal connection remains the same
      ME_CONFIG_BASICAUTH: false
    depends_on:
      - mongo

  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:29092"
    depends_on:
      - "kafka"
  kafka:
    image: obsidiandynamics/kafka
    restart: "no"
    ports:
      - "2181:2181"
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_LISTENERS: "INTERNAL://:29092,EXTERNAL://:9092"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:29092,EXTERNAL://localhost:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_ZOOKEEPER_SESSION_TIMEOUT: "6000"
      KAFKA_RESTART_ATTEMPTS: "10"
      KAFKA_RESTART_DELAY: "5"
      ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL: "0"

  redis:
    image: redis/redis-stack:latest
    restart: unless-stopped
    ports:
      - "6379:6379"
      - "8001:8001"

  logging:
    image: madhurprakash/fastapi_logging:latest
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - ./logs:/logs

  mailhog:
    image: mailhog/mailhog
    restart: unless-stopped
    ports:
      - "8025:8025"
      - "1025:1025"

  authentication:
    build: 
      context: .
      dockerfile: Dockerfile.auth
    restart: unless-stopped
    ports:
      - "8005:8005"
    volumes:
      - .:/authentication
    depends_on:
      - kafka
      - redis
      - mongo
      - logging
      # add other environment variables from your .env here or mount .env file below
    env_file:
      - .env   # make sure your env file is in the same dir or adjust path

  kafka-config:
    build:
      context: .
      dockerfile: Dockerfile.kafka1
    depends_on:
      - kafka
      - redis
      - mongo
    environment:
      - KAFKA_HOST=kafka
      - KAFKA_PORT=29092
    command: ["/authentication/waitforkafka.sh", "python", "authentication/config/kafka1_config.py"]

